<?xml version="1.0"?>
<bindings id="custombuttons-toolbarbuttons-bindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:xbl="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <binding id="toolbarbutton"
       extends="chrome://global/content/bindings/toolbarbutton.xml#toolbarbutton">



<implementation>
 <constructor>
     <![CDATA[
   // to avoid errors in JS console when we are trying to
   // initialize in Customize Toolbar dialog
   if (!window. custombutton)
   {
     Components. classes ["@mozilla.org/moz/jssubscript-loader;1"]. getService (Components. interfaces. mozIJSSubScriptLoader).
    loadSubScript ("chrome://custombuttons/content/cbbutton.js");
   }
   // end
   custombutton. buttonConstructor (this);
  ]]>
 </constructor>

 <destructor>
     <![CDATA[
   custombutton. buttonDestructor (this);
  ]]>
 </destructor>

 <method name="init">
  <body>
   <![CDATA[
    custombutton. buttonInit (this);
   ]]>
  </body>
 </method>

 <property name="parameters">
  <getter>
   <![CDATA[
    return custombutton. buttonGetParameters (this);
   ]]>
  </getter>
 </property>

 <property name="cbAccelKey">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbAccelKey (this);
   ]]>
  </getter>
 </property>

 <property name="image">
  <getter>
   <![CDATA[
    return custombutton. buttonGetImage (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("image", val);
   ]]>
  </setter>
 </property>

 <property name="Help">
  <getter>
   <![CDATA[
    return custombutton. buttonGetHelp (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("Help", val);
   ]]>
  </setter>
 </property>

 <property name="cbMode">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbMode (this);
   ]]>
  </getter>
 </property>

 <method name="setText">
  <parameter name="doc"/>
  <parameter name="nodeName"/>
  <parameter name="text"/>
  <parameter name="make_CDATASection"/>
  <body>
   <![CDATA[
    custombutton. buttonSetText (doc, nodeName, text, make_CDATASection);
   ]]>
  </body>
 </method>

 <property name="URI">
  <getter>
   <![CDATA[
    return custombutton. buttonGetURI (this);
   ]]>
  </getter>
 </property>

 <property name="name">
  <getter>
   <![CDATA[
    return this. getAttribute ("label");
   ]]>
  </getter>
 </property>

 <field name="_cbCommand">null</field>

 <property name="cbCommand">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-oncommand") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
   ]]>
  </setter>
 </property>

 <field name="_cbInitCode">null</field>

 <property name="cbInitCode">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-init") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
    if (this. hasAttribute ("initialized"))
     this. removeAttribute ("initialized");
   ]]>
  </setter>
 </property>

 <method name="cbExecuteCode">
  <body>
   <![CDATA[
    custombutton. buttonCbExecuteCode (this);
   ]]>
  </body>
 </method>

</implementation>

<handlers>
 <handler event="command">
  <![CDATA[
   custombutton. buttonCommand (event, this);
  ]]>
 </handler>

 <handler event="mousedown">
  <![CDATA[
   custombutton. buttonContext (event, this);
  ]]>
 </handler>
</handlers>

  </binding>

  <binding id="menu"
       extends="chrome://global/content/bindings/toolbarbutton.xml#menu">



<implementation>
 <constructor>
     <![CDATA[
   // to avoid errors in JS console when we are trying to
   // initialize in Customize Toolbar dialog
   if (!window. custombutton)
   {
     Components. classes ["@mozilla.org/moz/jssubscript-loader;1"]. getService (Components. interfaces. mozIJSSubScriptLoader).
    loadSubScript ("chrome://custombuttons/content/cbbutton.js");
   }
   // end
   custombutton. buttonConstructor (this);
  ]]>
 </constructor>

 <destructor>
     <![CDATA[
   custombutton. buttonDestructor (this);
  ]]>
 </destructor>

 <method name="init">
  <body>
   <![CDATA[
    custombutton. buttonInit (this);
   ]]>
  </body>
 </method>

 <property name="parameters">
  <getter>
   <![CDATA[
    return custombutton. buttonGetParameters (this);
   ]]>
  </getter>
 </property>

 <property name="cbAccelKey">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbAccelKey (this);
   ]]>
  </getter>
 </property>

 <property name="image">
  <getter>
   <![CDATA[
    return custombutton. buttonGetImage (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("image", val);
   ]]>
  </setter>
 </property>

 <property name="Help">
  <getter>
   <![CDATA[
    return custombutton. buttonGetHelp (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("Help", val);
   ]]>
  </setter>
 </property>

 <property name="cbMode">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbMode (this);
   ]]>
  </getter>
 </property>

 <method name="setText">
  <parameter name="doc"/>
  <parameter name="nodeName"/>
  <parameter name="text"/>
  <parameter name="make_CDATASection"/>
  <body>
   <![CDATA[
    custombutton. buttonSetText (doc, nodeName, text, make_CDATASection);
   ]]>
  </body>
 </method>

 <property name="URI">
  <getter>
   <![CDATA[
    return custombutton. buttonGetURI (this);
   ]]>
  </getter>
 </property>

 <property name="name">
  <getter>
   <![CDATA[
    return this. getAttribute ("label");
   ]]>
  </getter>
 </property>

 <field name="_cbCommand">null</field>

 <property name="cbCommand">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-oncommand") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
   ]]>
  </setter>
 </property>

 <field name="_cbInitCode">null</field>

 <property name="cbInitCode">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-init") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
    if (this. hasAttribute ("initialized"))
     this. removeAttribute ("initialized");
   ]]>
  </setter>
 </property>

 <method name="cbExecuteCode">
  <body>
   <![CDATA[
    custombutton. buttonCbExecuteCode (this);
   ]]>
  </body>
 </method>

</implementation>

<handlers>
 <handler event="command">
  <![CDATA[
   custombutton. buttonCommand (event, this);
  ]]>
 </handler>

 <handler event="mousedown">
  <![CDATA[
   custombutton. buttonContext (event, this);
  ]]>
 </handler>
</handlers>

  </binding>

  <binding id="menu-orient"
       extends="chrome://global/content/bindings/toolbarbutton.xml#menu-orient">



<implementation>
 <constructor>
     <![CDATA[
   // to avoid errors in JS console when we are trying to
   // initialize in Customize Toolbar dialog
   if (!window. custombutton)
   {
     Components. classes ["@mozilla.org/moz/jssubscript-loader;1"]. getService (Components. interfaces. mozIJSSubScriptLoader).
    loadSubScript ("chrome://custombuttons/content/cbbutton.js");
   }
   // end
   custombutton. buttonConstructor (this);
  ]]>
 </constructor>

 <destructor>
     <![CDATA[
   custombutton. buttonDestructor (this);
  ]]>
 </destructor>

 <method name="init">
  <body>
   <![CDATA[
    custombutton. buttonInit (this);
   ]]>
  </body>
 </method>

 <property name="parameters">
  <getter>
   <![CDATA[
    return custombutton. buttonGetParameters (this);
   ]]>
  </getter>
 </property>

 <property name="cbAccelKey">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbAccelKey (this);
   ]]>
  </getter>
 </property>

 <property name="image">
  <getter>
   <![CDATA[
    return custombutton. buttonGetImage (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("image", val);
   ]]>
  </setter>
 </property>

 <property name="Help">
  <getter>
   <![CDATA[
    return custombutton. buttonGetHelp (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("Help", val);
   ]]>
  </setter>
 </property>

 <property name="cbMode">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbMode (this);
   ]]>
  </getter>
 </property>

 <method name="setText">
  <parameter name="doc"/>
  <parameter name="nodeName"/>
  <parameter name="text"/>
  <parameter name="make_CDATASection"/>
  <body>
   <![CDATA[
    custombutton. buttonSetText (doc, nodeName, text, make_CDATASection);
   ]]>
  </body>
 </method>

 <property name="URI">
  <getter>
   <![CDATA[
    return custombutton. buttonGetURI (this);
   ]]>
  </getter>
 </property>

 <property name="name">
  <getter>
   <![CDATA[
    return this. getAttribute ("label");
   ]]>
  </getter>
 </property>

 <field name="_cbCommand">null</field>

 <property name="cbCommand">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-oncommand") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
   ]]>
  </setter>
 </property>

 <field name="_cbInitCode">null</field>

 <property name="cbInitCode">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-init") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
    if (this. hasAttribute ("initialized"))
     this. removeAttribute ("initialized");
   ]]>
  </setter>
 </property>

 <method name="cbExecuteCode">
  <body>
   <![CDATA[
    custombutton. buttonCbExecuteCode (this);
   ]]>
  </body>
 </method>

</implementation>

<handlers>
 <handler event="command">
  <![CDATA[
   custombutton. buttonCommand (event, this);
  ]]>
 </handler>

 <handler event="mousedown">
  <![CDATA[
   custombutton. buttonContext (event, this);
  ]]>
 </handler>
</handlers>

  </binding>

  <binding id="menu-button"
       extends="chrome://global/content/bindings/toolbarbutton.xml#menu-button">



<implementation>
 <constructor>
     <![CDATA[
   // to avoid errors in JS console when we are trying to
   // initialize in Customize Toolbar dialog
   if (!window. custombutton)
   {
     Components. classes ["@mozilla.org/moz/jssubscript-loader;1"]. getService (Components. interfaces. mozIJSSubScriptLoader).
    loadSubScript ("chrome://custombuttons/content/cbbutton.js");
   }
   // end
   custombutton. buttonConstructor (this);
  ]]>
 </constructor>

 <destructor>
     <![CDATA[
   custombutton. buttonDestructor (this);
  ]]>
 </destructor>

 <method name="init">
  <body>
   <![CDATA[
    custombutton. buttonInit (this);
   ]]>
  </body>
 </method>

 <property name="parameters">
  <getter>
   <![CDATA[
    return custombutton. buttonGetParameters (this);
   ]]>
  </getter>
 </property>

 <property name="cbAccelKey">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbAccelKey (this);
   ]]>
  </getter>
 </property>

 <property name="image">
  <getter>
   <![CDATA[
    return custombutton. buttonGetImage (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("image", val);
   ]]>
  </setter>
 </property>

 <property name="Help">
  <getter>
   <![CDATA[
    return custombutton. buttonGetHelp (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("Help", val);
   ]]>
  </setter>
 </property>

 <property name="cbMode">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbMode (this);
   ]]>
  </getter>
 </property>

 <method name="setText">
  <parameter name="doc"/>
  <parameter name="nodeName"/>
  <parameter name="text"/>
  <parameter name="make_CDATASection"/>
  <body>
   <![CDATA[
    custombutton. buttonSetText (doc, nodeName, text, make_CDATASection);
   ]]>
  </body>
 </method>

 <property name="URI">
  <getter>
   <![CDATA[
    return custombutton. buttonGetURI (this);
   ]]>
  </getter>
 </property>

 <property name="name">
  <getter>
   <![CDATA[
    return this. getAttribute ("label");
   ]]>
  </getter>
 </property>

 <field name="_cbCommand">null</field>

 <property name="cbCommand">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-oncommand") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
   ]]>
  </setter>
 </property>

 <field name="_cbInitCode">null</field>

 <property name="cbInitCode">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-init") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
    if (this. hasAttribute ("initialized"))
     this. removeAttribute ("initialized");
   ]]>
  </setter>
 </property>

 <method name="cbExecuteCode">
  <body>
   <![CDATA[
    custombutton. buttonCbExecuteCode (this);
   ]]>
  </body>
 </method>

</implementation>

<handlers>
 <handler event="command">
  <![CDATA[
   custombutton. buttonCommand (event, this);
  ]]>
 </handler>

 <handler event="mousedown">
  <![CDATA[
   custombutton. buttonContext (event, this);
  ]]>
 </handler>
</handlers>

  </binding>

</bindings>
