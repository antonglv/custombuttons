<?xml version="1.0"?>
<bindings id="custombuttons-toolbarbuttons-bindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:xbl="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <binding id="toolbarbutton"
       extends="chrome://global/content/bindings/toolbarbutton.xml#toolbarbutton">



<implementation>
 <constructor>
     <![CDATA[
   // to avoid errors in JS console when we are trying to
   // initialize in Customize Toolbar dialog
   //if (!window. custombutton)
   //{
     //Components. classes ["@mozilla.org/moz/jssubscript-loader;1"]. getService (Components. interfaces. mozIJSSubScriptLoader).
    //loadSubScript ("chrome://custombuttons/content/cbbutton.js");
   //}
   // end
   custombutton. buttonConstructor (this);
  ]]>
 </constructor>

 <!-- stubs to resolve AIOS 0.7.7 incompatibility -->
 <method name="_callNativeMethod">
  <parameter name="name"/>
  <parameter name="arguments"/>
  <body>
   <![CDATA[
    var res;
    try
    {
     var nativeMethod = Components. lookupMethod (this, name);
     res = nativeMethod. apply (this, arguments);
    } catch (err) {}
    return res;
   ]]>
  </body>
 </method>

 <property name="id">
  <getter>
   return this. _callNativeMethod ("id", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("id", [val]);
  </setter>
 </property>

 <property name="localName">
  <getter>
   return this. _callNativeMethod ("localName", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("localName", [val]);
  </setter>
 </property>

 <property name="title">
  <getter>
   return this. _callNativeMethod ("title", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("title", [val]);
  </setter>
 </property>

 <method name="getAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("getAttribute", [name]);
  </body>
 </method>

 <method name="hasAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("hasAttribute", [name]);
  </body>
 </method>

 <method name="removeAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("removeAttribute", [name]);
  </body>
 </method>

  <method name="setAttribute">
   <parameter name="name"/>
   <parameter name="value"/>
   <body>
    return this. _callNativeMethod ("setAttribute", [name, value]);
   </body>
  </method>
  <!-- stubs to resolve AIOS 0.7.7 incompatibility -->

 <destructor>
     <![CDATA[
   custombutton. buttonDestructor (this);
  ]]>
 </destructor>

 <method name="init">
  <body>
   <![CDATA[
    custombutton. buttonInit (this);
   ]]>
  </body>
 </method>

 <method name="destroy">
  <body>
   <![CDATA[
    custombutton. buttonDestroy (this);
   ]]>
  </body>
 </method>

 <property name="parameters">
  <getter>
   <![CDATA[
    return custombutton. buttonGetParameters (this);
   ]]>
  </getter>
 </property>

 <property name="cbAccelKey">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbAccelKey (this);
   ]]>
  </getter>
 </property>

 <property name="image">
  <getter>
   <![CDATA[
    return custombutton. buttonGetImage (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("image", val);
   ]]>
  </setter>
 </property>

 <property name="Help">
  <getter>
   <![CDATA[
    return custombutton. buttonGetHelp (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("Help", val);
   ]]>
  </setter>
 </property>

 <property name="cbMode">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbMode (this);
   ]]>
  </getter>
 </property>

 <method name="setText">
  <parameter name="doc"/>
  <parameter name="nodeName"/>
  <parameter name="text"/>
  <parameter name="make_CDATASection"/>
  <body>
   <![CDATA[
    custombutton. buttonSetText (doc, nodeName, text, make_CDATASection);
   ]]>
  </body>
 </method>

 <property name="URI">
  <getter>
   <![CDATA[
    return custombutton. buttonGetURI (this);
   ]]>
  </getter>
 </property>

 <field name="_name">""</field>

 <property name="name">
  <getter>
   <![CDATA[
    if (this. hasAttribute ("cb-name"))
     return this. getAttribute ("cb-name");
    else
     return this. _name;
   ]]>
  </getter>
  <setter>
   <![CDATA[
    if (!val)
     return;
    if (!this. hasAttribute ("label") ||
     !this. getAttribute ("label"))
     this. setAttribute ("label", val);
    this. _name = val;
    this. setAttribute ("cb-name", val);
   ]]>
  </setter>
 </property>

 <field name="_cbCommand">null</field>
 <field name="_initPhase">false</field>

 <property name="cbCommand">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-oncommand") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
   ]]>
  </setter>
 </property>

 <field name="_cbInitCode">null</field>

 <property name="cbInitCode">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-init") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
    if (this. hasAttribute ("initialized"))
     this. removeAttribute ("initialized");
   ]]>
  </setter>
 </property>

 <method name="cbExecuteCode">
  <body>
   <![CDATA[
    custombutton. buttonCommand ({}, this);
   ]]>
  </body>
 </method>

 <field name="_ctxtObj">false</field>

</implementation>

<handlers>
 <handler event="command">
  <![CDATA[
   custombutton. buttonCommand (event, this);
  ]]>
 </handler>

 <handler event="mousedown" phase="capturing">
  <![CDATA[
   custombutton. onMouseDown (event, this);
  ]]>
 </handler>
</handlers>


  </binding>

  <binding id="menu"
       extends="chrome://global/content/bindings/toolbarbutton.xml#menu">



<implementation>
 <constructor>
     <![CDATA[
   // to avoid errors in JS console when we are trying to
   // initialize in Customize Toolbar dialog
   //if (!window. custombutton)
   //{
     //Components. classes ["@mozilla.org/moz/jssubscript-loader;1"]. getService (Components. interfaces. mozIJSSubScriptLoader).
    //loadSubScript ("chrome://custombuttons/content/cbbutton.js");
   //}
   // end
   custombutton. buttonConstructor (this);
  ]]>
 </constructor>

 <!-- stubs to resolve AIOS 0.7.7 incompatibility -->
 <method name="_callNativeMethod">
  <parameter name="name"/>
  <parameter name="arguments"/>
  <body>
   <![CDATA[
    var res;
    try
    {
     var nativeMethod = Components. lookupMethod (this, name);
     res = nativeMethod. apply (this, arguments);
    } catch (err) {}
    return res;
   ]]>
  </body>
 </method>

 <property name="id">
  <getter>
   return this. _callNativeMethod ("id", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("id", [val]);
  </setter>
 </property>

 <property name="localName">
  <getter>
   return this. _callNativeMethod ("localName", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("localName", [val]);
  </setter>
 </property>

 <property name="title">
  <getter>
   return this. _callNativeMethod ("title", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("title", [val]);
  </setter>
 </property>

 <method name="getAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("getAttribute", [name]);
  </body>
 </method>

 <method name="hasAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("hasAttribute", [name]);
  </body>
 </method>

 <method name="removeAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("removeAttribute", [name]);
  </body>
 </method>

  <method name="setAttribute">
   <parameter name="name"/>
   <parameter name="value"/>
   <body>
    return this. _callNativeMethod ("setAttribute", [name, value]);
   </body>
  </method>
  <!-- stubs to resolve AIOS 0.7.7 incompatibility -->

 <destructor>
     <![CDATA[
   custombutton. buttonDestructor (this);
  ]]>
 </destructor>

 <method name="init">
  <body>
   <![CDATA[
    custombutton. buttonInit (this);
   ]]>
  </body>
 </method>

 <method name="destroy">
  <body>
   <![CDATA[
    custombutton. buttonDestroy (this);
   ]]>
  </body>
 </method>

 <property name="parameters">
  <getter>
   <![CDATA[
    return custombutton. buttonGetParameters (this);
   ]]>
  </getter>
 </property>

 <property name="cbAccelKey">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbAccelKey (this);
   ]]>
  </getter>
 </property>

 <property name="image">
  <getter>
   <![CDATA[
    return custombutton. buttonGetImage (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("image", val);
   ]]>
  </setter>
 </property>

 <property name="Help">
  <getter>
   <![CDATA[
    return custombutton. buttonGetHelp (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("Help", val);
   ]]>
  </setter>
 </property>

 <property name="cbMode">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbMode (this);
   ]]>
  </getter>
 </property>

 <method name="setText">
  <parameter name="doc"/>
  <parameter name="nodeName"/>
  <parameter name="text"/>
  <parameter name="make_CDATASection"/>
  <body>
   <![CDATA[
    custombutton. buttonSetText (doc, nodeName, text, make_CDATASection);
   ]]>
  </body>
 </method>

 <property name="URI">
  <getter>
   <![CDATA[
    return custombutton. buttonGetURI (this);
   ]]>
  </getter>
 </property>

 <field name="_name">""</field>

 <property name="name">
  <getter>
   <![CDATA[
    if (this. hasAttribute ("cb-name"))
     return this. getAttribute ("cb-name");
    else
     return this. _name;
   ]]>
  </getter>
  <setter>
   <![CDATA[
    if (!val)
     return;
    if (!this. hasAttribute ("label") ||
     !this. getAttribute ("label"))
     this. setAttribute ("label", val);
    this. _name = val;
    this. setAttribute ("cb-name", val);
   ]]>
  </setter>
 </property>

 <field name="_cbCommand">null</field>
 <field name="_initPhase">false</field>

 <property name="cbCommand">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-oncommand") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
   ]]>
  </setter>
 </property>

 <field name="_cbInitCode">null</field>

 <property name="cbInitCode">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-init") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
    if (this. hasAttribute ("initialized"))
     this. removeAttribute ("initialized");
   ]]>
  </setter>
 </property>

 <method name="cbExecuteCode">
  <body>
   <![CDATA[
    custombutton. buttonCommand ({}, this);
   ]]>
  </body>
 </method>

 <field name="_ctxtObj">false</field>

</implementation>

<handlers>
 <handler event="command">
  <![CDATA[
   custombutton. buttonCommand (event, this);
  ]]>
 </handler>

 <handler event="mousedown" phase="capturing">
  <![CDATA[
   custombutton. onMouseDown (event, this);
  ]]>
 </handler>
</handlers>


  </binding>

  <binding id="menu-orient"
       extends="chrome://global/content/bindings/toolbarbutton.xml#menu-orient">



<implementation>
 <constructor>
     <![CDATA[
   // to avoid errors in JS console when we are trying to
   // initialize in Customize Toolbar dialog
   //if (!window. custombutton)
   //{
     //Components. classes ["@mozilla.org/moz/jssubscript-loader;1"]. getService (Components. interfaces. mozIJSSubScriptLoader).
    //loadSubScript ("chrome://custombuttons/content/cbbutton.js");
   //}
   // end
   custombutton. buttonConstructor (this);
  ]]>
 </constructor>

 <!-- stubs to resolve AIOS 0.7.7 incompatibility -->
 <method name="_callNativeMethod">
  <parameter name="name"/>
  <parameter name="arguments"/>
  <body>
   <![CDATA[
    var res;
    try
    {
     var nativeMethod = Components. lookupMethod (this, name);
     res = nativeMethod. apply (this, arguments);
    } catch (err) {}
    return res;
   ]]>
  </body>
 </method>

 <property name="id">
  <getter>
   return this. _callNativeMethod ("id", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("id", [val]);
  </setter>
 </property>

 <property name="localName">
  <getter>
   return this. _callNativeMethod ("localName", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("localName", [val]);
  </setter>
 </property>

 <property name="title">
  <getter>
   return this. _callNativeMethod ("title", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("title", [val]);
  </setter>
 </property>

 <method name="getAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("getAttribute", [name]);
  </body>
 </method>

 <method name="hasAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("hasAttribute", [name]);
  </body>
 </method>

 <method name="removeAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("removeAttribute", [name]);
  </body>
 </method>

  <method name="setAttribute">
   <parameter name="name"/>
   <parameter name="value"/>
   <body>
    return this. _callNativeMethod ("setAttribute", [name, value]);
   </body>
  </method>
  <!-- stubs to resolve AIOS 0.7.7 incompatibility -->

 <destructor>
     <![CDATA[
   custombutton. buttonDestructor (this);
  ]]>
 </destructor>

 <method name="init">
  <body>
   <![CDATA[
    custombutton. buttonInit (this);
   ]]>
  </body>
 </method>

 <method name="destroy">
  <body>
   <![CDATA[
    custombutton. buttonDestroy (this);
   ]]>
  </body>
 </method>

 <property name="parameters">
  <getter>
   <![CDATA[
    return custombutton. buttonGetParameters (this);
   ]]>
  </getter>
 </property>

 <property name="cbAccelKey">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbAccelKey (this);
   ]]>
  </getter>
 </property>

 <property name="image">
  <getter>
   <![CDATA[
    return custombutton. buttonGetImage (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("image", val);
   ]]>
  </setter>
 </property>

 <property name="Help">
  <getter>
   <![CDATA[
    return custombutton. buttonGetHelp (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("Help", val);
   ]]>
  </setter>
 </property>

 <property name="cbMode">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbMode (this);
   ]]>
  </getter>
 </property>

 <method name="setText">
  <parameter name="doc"/>
  <parameter name="nodeName"/>
  <parameter name="text"/>
  <parameter name="make_CDATASection"/>
  <body>
   <![CDATA[
    custombutton. buttonSetText (doc, nodeName, text, make_CDATASection);
   ]]>
  </body>
 </method>

 <property name="URI">
  <getter>
   <![CDATA[
    return custombutton. buttonGetURI (this);
   ]]>
  </getter>
 </property>

 <field name="_name">""</field>

 <property name="name">
  <getter>
   <![CDATA[
    if (this. hasAttribute ("cb-name"))
     return this. getAttribute ("cb-name");
    else
     return this. _name;
   ]]>
  </getter>
  <setter>
   <![CDATA[
    if (!val)
     return;
    if (!this. hasAttribute ("label") ||
     !this. getAttribute ("label"))
     this. setAttribute ("label", val);
    this. _name = val;
    this. setAttribute ("cb-name", val);
   ]]>
  </setter>
 </property>

 <field name="_cbCommand">null</field>
 <field name="_initPhase">false</field>

 <property name="cbCommand">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-oncommand") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
   ]]>
  </setter>
 </property>

 <field name="_cbInitCode">null</field>

 <property name="cbInitCode">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-init") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
    if (this. hasAttribute ("initialized"))
     this. removeAttribute ("initialized");
   ]]>
  </setter>
 </property>

 <method name="cbExecuteCode">
  <body>
   <![CDATA[
    custombutton. buttonCommand ({}, this);
   ]]>
  </body>
 </method>

 <field name="_ctxtObj">false</field>

</implementation>

<handlers>
 <handler event="command">
  <![CDATA[
   custombutton. buttonCommand (event, this);
  ]]>
 </handler>

 <handler event="mousedown" phase="capturing">
  <![CDATA[
   custombutton. onMouseDown (event, this);
  ]]>
 </handler>
</handlers>


  </binding>

  <binding id="menu-button"
       extends="chrome://global/content/bindings/toolbarbutton.xml#menu-button">



<implementation>
 <constructor>
     <![CDATA[
   // to avoid errors in JS console when we are trying to
   // initialize in Customize Toolbar dialog
   //if (!window. custombutton)
   //{
     //Components. classes ["@mozilla.org/moz/jssubscript-loader;1"]. getService (Components. interfaces. mozIJSSubScriptLoader).
    //loadSubScript ("chrome://custombuttons/content/cbbutton.js");
   //}
   // end
   custombutton. buttonConstructor (this);
  ]]>
 </constructor>

 <!-- stubs to resolve AIOS 0.7.7 incompatibility -->
 <method name="_callNativeMethod">
  <parameter name="name"/>
  <parameter name="arguments"/>
  <body>
   <![CDATA[
    var res;
    try
    {
     var nativeMethod = Components. lookupMethod (this, name);
     res = nativeMethod. apply (this, arguments);
    } catch (err) {}
    return res;
   ]]>
  </body>
 </method>

 <property name="id">
  <getter>
   return this. _callNativeMethod ("id", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("id", [val]);
  </setter>
 </property>

 <property name="localName">
  <getter>
   return this. _callNativeMethod ("localName", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("localName", [val]);
  </setter>
 </property>

 <property name="title">
  <getter>
   return this. _callNativeMethod ("title", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("title", [val]);
  </setter>
 </property>

 <method name="getAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("getAttribute", [name]);
  </body>
 </method>

 <method name="hasAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("hasAttribute", [name]);
  </body>
 </method>

 <method name="removeAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("removeAttribute", [name]);
  </body>
 </method>

  <method name="setAttribute">
   <parameter name="name"/>
   <parameter name="value"/>
   <body>
    return this. _callNativeMethod ("setAttribute", [name, value]);
   </body>
  </method>
  <!-- stubs to resolve AIOS 0.7.7 incompatibility -->

 <destructor>
     <![CDATA[
   custombutton. buttonDestructor (this);
  ]]>
 </destructor>

 <method name="init">
  <body>
   <![CDATA[
    custombutton. buttonInit (this);
   ]]>
  </body>
 </method>

 <method name="destroy">
  <body>
   <![CDATA[
    custombutton. buttonDestroy (this);
   ]]>
  </body>
 </method>

 <property name="parameters">
  <getter>
   <![CDATA[
    return custombutton. buttonGetParameters (this);
   ]]>
  </getter>
 </property>

 <property name="cbAccelKey">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbAccelKey (this);
   ]]>
  </getter>
 </property>

 <property name="image">
  <getter>
   <![CDATA[
    return custombutton. buttonGetImage (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("image", val);
   ]]>
  </setter>
 </property>

 <property name="Help">
  <getter>
   <![CDATA[
    return custombutton. buttonGetHelp (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("Help", val);
   ]]>
  </setter>
 </property>

 <property name="cbMode">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbMode (this);
   ]]>
  </getter>
 </property>

 <method name="setText">
  <parameter name="doc"/>
  <parameter name="nodeName"/>
  <parameter name="text"/>
  <parameter name="make_CDATASection"/>
  <body>
   <![CDATA[
    custombutton. buttonSetText (doc, nodeName, text, make_CDATASection);
   ]]>
  </body>
 </method>

 <property name="URI">
  <getter>
   <![CDATA[
    return custombutton. buttonGetURI (this);
   ]]>
  </getter>
 </property>

 <field name="_name">""</field>

 <property name="name">
  <getter>
   <![CDATA[
    if (this. hasAttribute ("cb-name"))
     return this. getAttribute ("cb-name");
    else
     return this. _name;
   ]]>
  </getter>
  <setter>
   <![CDATA[
    if (!val)
     return;
    if (!this. hasAttribute ("label") ||
     !this. getAttribute ("label"))
     this. setAttribute ("label", val);
    this. _name = val;
    this. setAttribute ("cb-name", val);
   ]]>
  </setter>
 </property>

 <field name="_cbCommand">null</field>
 <field name="_initPhase">false</field>

 <property name="cbCommand">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-oncommand") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
   ]]>
  </setter>
 </property>

 <field name="_cbInitCode">null</field>

 <property name="cbInitCode">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-init") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
    if (this. hasAttribute ("initialized"))
     this. removeAttribute ("initialized");
   ]]>
  </setter>
 </property>

 <method name="cbExecuteCode">
  <body>
   <![CDATA[
    custombutton. buttonCommand ({}, this);
   ]]>
  </body>
 </method>

 <field name="_ctxtObj">false</field>

</implementation>

<handlers>
 <handler event="command">
  <![CDATA[
   custombutton. buttonCommand (event, this);
  ]]>
 </handler>

 <handler event="mousedown" phase="capturing">
  <![CDATA[
   custombutton. onMouseDown (event, this);
  ]]>
 </handler>
</handlers>


  </binding>

  <binding id="menu-vertical"
       extends="chrome://global/content/bindings/toolbarbutton.xml#menu-vertical">



<implementation>
 <constructor>
     <![CDATA[
   // to avoid errors in JS console when we are trying to
   // initialize in Customize Toolbar dialog
   //if (!window. custombutton)
   //{
     //Components. classes ["@mozilla.org/moz/jssubscript-loader;1"]. getService (Components. interfaces. mozIJSSubScriptLoader).
    //loadSubScript ("chrome://custombuttons/content/cbbutton.js");
   //}
   // end
   custombutton. buttonConstructor (this);
  ]]>
 </constructor>

 <!-- stubs to resolve AIOS 0.7.7 incompatibility -->
 <method name="_callNativeMethod">
  <parameter name="name"/>
  <parameter name="arguments"/>
  <body>
   <![CDATA[
    var res;
    try
    {
     var nativeMethod = Components. lookupMethod (this, name);
     res = nativeMethod. apply (this, arguments);
    } catch (err) {}
    return res;
   ]]>
  </body>
 </method>

 <property name="id">
  <getter>
   return this. _callNativeMethod ("id", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("id", [val]);
  </setter>
 </property>

 <property name="localName">
  <getter>
   return this. _callNativeMethod ("localName", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("localName", [val]);
  </setter>
 </property>

 <property name="title">
  <getter>
   return this. _callNativeMethod ("title", []);
  </getter>

  <setter>
   return this. _callNativeMethod ("title", [val]);
  </setter>
 </property>

 <method name="getAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("getAttribute", [name]);
  </body>
 </method>

 <method name="hasAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("hasAttribute", [name]);
  </body>
 </method>

 <method name="removeAttribute">
  <parameter name="name"/>
  <body>
   return this. _callNativeMethod ("removeAttribute", [name]);
  </body>
 </method>

  <method name="setAttribute">
   <parameter name="name"/>
   <parameter name="value"/>
   <body>
    return this. _callNativeMethod ("setAttribute", [name, value]);
   </body>
  </method>
  <!-- stubs to resolve AIOS 0.7.7 incompatibility -->

 <destructor>
     <![CDATA[
   custombutton. buttonDestructor (this);
  ]]>
 </destructor>

 <method name="init">
  <body>
   <![CDATA[
    custombutton. buttonInit (this);
   ]]>
  </body>
 </method>

 <method name="destroy">
  <body>
   <![CDATA[
    custombutton. buttonDestroy (this);
   ]]>
  </body>
 </method>

 <property name="parameters">
  <getter>
   <![CDATA[
    return custombutton. buttonGetParameters (this);
   ]]>
  </getter>
 </property>

 <property name="cbAccelKey">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbAccelKey (this);
   ]]>
  </getter>
 </property>

 <property name="image">
  <getter>
   <![CDATA[
    return custombutton. buttonGetImage (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("image", val);
   ]]>
  </setter>
 </property>

 <property name="Help">
  <getter>
   <![CDATA[
    return custombutton. buttonGetHelp (this);
   ]]>
  </getter>

  <setter>
   <![CDATA[
    this. setAttribute ("Help", val);
   ]]>
  </setter>
 </property>

 <property name="cbMode">
  <getter>
   <![CDATA[
    return custombutton. buttonGetCbMode (this);
   ]]>
  </getter>
 </property>

 <method name="setText">
  <parameter name="doc"/>
  <parameter name="nodeName"/>
  <parameter name="text"/>
  <parameter name="make_CDATASection"/>
  <body>
   <![CDATA[
    custombutton. buttonSetText (doc, nodeName, text, make_CDATASection);
   ]]>
  </body>
 </method>

 <property name="URI">
  <getter>
   <![CDATA[
    return custombutton. buttonGetURI (this);
   ]]>
  </getter>
 </property>

 <field name="_name">""</field>

 <property name="name">
  <getter>
   <![CDATA[
    if (this. hasAttribute ("cb-name"))
     return this. getAttribute ("cb-name");
    else
     return this. _name;
   ]]>
  </getter>
  <setter>
   <![CDATA[
    if (!val)
     return;
    if (!this. hasAttribute ("label") ||
     !this. getAttribute ("label"))
     this. setAttribute ("label", val);
    this. _name = val;
    this. setAttribute ("cb-name", val);
   ]]>
  </setter>
 </property>

 <field name="_cbCommand">null</field>
 <field name="_initPhase">false</field>

 <property name="cbCommand">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-oncommand") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
   ]]>
  </setter>
 </property>

 <field name="_cbInitCode">null</field>

 <property name="cbInitCode">
  <getter>
   <![CDATA[
    return this. getAttribute ("cb-init") || "";
   ]]>
  </getter>

  <setter>
   <![CDATA[
    if (this. hasAttribute ("initialized"))
     this. removeAttribute ("initialized");
   ]]>
  </setter>
 </property>

 <method name="cbExecuteCode">
  <body>
   <![CDATA[
    custombutton. buttonCommand ({}, this);
   ]]>
  </body>
 </method>

 <field name="_ctxtObj">false</field>

</implementation>

<handlers>
 <handler event="command">
  <![CDATA[
   custombutton. buttonCommand (event, this);
  ]]>
 </handler>

 <handler event="mousedown" phase="capturing">
  <![CDATA[
   custombutton. onMouseDown (event, this);
  ]]>
 </handler>
</handlers>


  </binding>

</bindings>
